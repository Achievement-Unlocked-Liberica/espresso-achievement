# <Spring Boot Configuration />
spring.application.name=Espresso-Achievement

# <Spring Boot Configuration />
logging.level.org.springframework.boot.context.config=TRACE

# <Spring Boot Configuration />
spring.main.lazy-initialization=true

# <API Server Configuration />

# <Active Profiles />
# spring.profiles.active=lcl

# <Errors />
server.error.include-message=always

# <Secrets Configuration />
# This tells Spring to load all files from the /etc/secrets directory.
# The `optional:` prefix ensures the app can still start if the directory is empty.
spring.config.import=optional:file:/etc/secrets/



# SSL Configuration
# server.ssl.key-store=classpath:espresso-local.p12
# server.ssl.key-store-password=espresso123
# server.ssl.key-store-type=PKCS12
# server.ssl.key-alias=espresso-local
# server.ssl.enabled=true

# HTTPS Port Configuration
server.port=8080

# Swagger/OpenAPI Configuration for HTTPS
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.tryItOutEnabled=true

# Server Configuration - Compression
# https://medium.com/javarevisited/this-spring-boot-trick-made-my-rest-api-3x-faster-no-code-rewrite-required-ede46f7ea09f
server.compression.enabled=true
server.compression.mime-types=application/json,application/xml,text/html,text/plain
server.compression.min-response-size=1024

# Data Providers - PostgreSQL
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl

# PostgreSQL Configuration
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}

spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# TODO: Disable SQL logging for production
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# Data Providers - DigitalOcean S# Object Storage
digitalocean.spaces.endpoint=${DIGITALOCEAN_SPACES_ENDPOINT}
digitalocean.spaces.accessKey=${DIGITALOCEAN_SPACES_ACCESSKEY}
digitalocean.spaces.secretKey=${DIGITALOCEAN_SPACES_SECRETKEY}
digitalocean.spaces.bucketName=${DIGITALOCEAN_SPACES_BUCKETNAME}


# Application Configuration - Users
user.profilePicture.baseUrl=https://sfo3.digitaloceanspaces.com/db-ostorage-sfo3-bloodhound-01
user.profilePicture.directory=users/profile/pictures

# Application Configuration - Achievement Media
achievement.media.baseUrl=https://sfo3.digitaloceanspaces.com/db-ostorage-sfo3-bloodhound-01
achievement.media.directory=achievements/media

# <JWT Configuration />
app.jwt.secret=${APP_JWT_SECRET}
app.jwt.expiration=86400000

# API Logging Configuration
common.service.operational.apilogging.enabled=true
